#!/bin/bash

rm clientkeystore clienttruststore serverkeystore *.crt *.csr *.key

openssl genrsa -des3 -out root-ca.key 1024

openssl req -new -x509 -days 3650 -key root-ca.key -out ca.crt

keytool -import -file /Users/anton/certs/ca.crt -alias CA -keystore clienttruststore

keytool -genkey -alias keypair -keystore clientkeystore

keytool -keystore clientkeystore -certreq -alias keypair -file csr.csr

openssl x509 -CA ca.crt -CAkey root-ca.key -req -in csr.csr -out signed.crt -set_serial 1

keytool -keystore clientkeystore -import -file ca.crt -alias CA

keytool -keystore clientkeystore -import -file signed.crt -alias keypair


#A)
#Om man vill skapa ett x509 versions3 certifikat så måste du specificera en extensionsfile vid #skapandet av #certifikatet.
#B)
#Version 3 är formatet på certifikatsutökningen som används till att kunna hålla information om #certifikatshållaren och att definiera användningsområde hos certifikatet.


keytool -genkey -alias serverkeypair -keystore serverkeystore

keytool -keystore serverkeystore -certreq -alias serverkeypair -file servercsr.csr

openssl x509 -CA ca.crt -CAkey root-ca.key -req -in servercsr.csr -out serversigned.crt -set_serial 1

keytool -keystore serverkeystore -import -file ca.crt -alias CA

keytool -keystore serverkeystore -import -file serversigned.crt -alias serverkeypair

keytool -keystore servertruststore -import -file ca.crt -alias CA


#C)Det verkar fungera men det är rätt idiotiskt då det blir samma lösenord by default (då den redan #är initierad)
#
#D)
#Lösenorden är hos clienttruststore, clientkeystore, servertruststore, serverkeystore samt en för #client och en för server.
#Truststores - skyddar rotcertifikatet
#Keystore - Skyddar nycklarna
#Clientkeypair - skyddar det individuella keypairet
#Serverkeypair - skyddar det individuella keypairet

#javac /Users/anton/Downloads/ssl/client.java
#javac /Users/anton/Downloads/ssl/server.java

#E)
#Man får tillbaka det man skrivit baklänges.
#F)

ip230-124:certs anton$ java client localhost 9876
args[0] = localhost
args[1] = 9876

socket before handshake:
70ba9340[SSL_NULL_WITH_NULL_NULL: Socket[addr=localhost/127.0.0.1,port=9876,localport=56412]]

certificate name (subject DN field) on certificate received from server:
CN="<dat11aj1> (Anton Jakobsson) / <dat11jhe> (Johan Henriksson)", OU=LTH, O=Lunds Universitet, L=Lund, ST=Sverige, C=SE

socket after handshake:
70ba9340[TLS_DHE_DSS_WITH_AES_128_CBC_SHA: Socket[addr=localhost/127.0.0.1,port=9876,localport=56412]]

secure connection established


>hej
sending 'hej' to server...done
received 'jeh' from server

Antons-MacBook-Air:certs anton$ java server 9876

Server Started

client connected
client name (cert subject DN field): CN="<dat11aj1> (Anton Jakobsson) / <dat11jhe> (Johan Henriksson)", OU=LTH, O=Lunds Universitet, L=Lund, ST=Sverige, C=SE
1 concurrent connection(s)

received 'hej' from client
sending 'jeh' to client...done
